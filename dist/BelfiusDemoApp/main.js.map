{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.constants.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.utils.ts","webpack:///./src/app/layout/app-content/app-content.component.html","webpack:///./src/app/layout/app-content/app-content.component.scss","webpack:///./src/app/layout/app-content/app-content.component.ts","webpack:///./src/app/layout/app-footer/app-footer.component.html","webpack:///./src/app/layout/app-footer/app-footer.component.scss","webpack:///./src/app/layout/app-footer/app-footer.component.ts","webpack:///./src/app/layout/app-nav/app-nav.component.html","webpack:///./src/app/layout/app-nav/app-nav.component.scss","webpack:///./src/app/layout/app-nav/app-nav.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/pages/car-detail/car-detail.component.html","webpack:///./src/app/pages/car-detail/car-detail.component.scss","webpack:///./src/app/pages/car-detail/car-detail.component.ts","webpack:///./src/app/pages/car-overview/car-overview.component.html","webpack:///./src/app/pages/car-overview/car-overview.component.scss","webpack:///./src/app/pages/car-overview/car-overview.component.ts","webpack:///./src/app/pages/company-overview/company-overview.component.html","webpack:///./src/app/pages/company-overview/company-overview.component.scss","webpack:///./src/app/pages/company-overview/company-overview.component.ts","webpack:///./src/app/pages/homepage/homepage.component.html","webpack:///./src/app/pages/homepage/homepage.component.scss","webpack:///./src/app/pages/homepage/homepage.component.ts","webpack:///./src/app/pages/not-found/not-found.component.html","webpack:///./src/app/pages/not-found/not-found.component.scss","webpack:///./src/app/pages/not-found/not-found.component.ts","webpack:///./src/app/services/car.service.ts","webpack:///./src/app/services/company.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppContentComponent } from './layout/app-content/app-content.component';\nimport { CarOverviewComponent } from './pages/car-overview/car-overview.component';\nimport { HomepageComponent } from './pages/homepage/homepage.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { RequestParams } from './app.constants';\nimport { CompanyOverviewComponent } from './pages/company-overview/company-overview.component';\nimport { CarDetailComponent } from './pages/car-detail/car-detail.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'homepage',\n    },\n    {\n        path: '',\n        component: AppContentComponent,\n        children: [\n            {\n                component: HomepageComponent,\n                path: 'homepage'\n            },\n            {\n                component: CompanyOverviewComponent,\n                path: 'companies/overview'\n            },\n            {\n                component: CarOverviewComponent,\n                path: `cars/overview/:${RequestParams.COMPANY_ID}`\n            },\n            {\n                component: CarDetailComponent,\n                path: `cars/details/:${RequestParams.CAR_ID}`\n            }\n        ]\n    },\n    {\n        path: '**',\n        component: NotFoundComponent\n    }\n];\n\n@NgModule({\n    exports: [RouterModule],\n    imports: [RouterModule.forRoot(routes)],\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"<router-outlet>\\n  <div [hidden]=\\\"!showLoader\\\" class=\\\"loading row align-items-center justify-content-center\\\">\\n    <mat-spinner></mat-spinner>\\n  </div>\\n</router-outlet>\\n\"","module.exports = \"/*Extra Small*/\\n/*Small*/\\n/*Medium*/\\n/* Extra Large*/\\n\"","import { Component, OnInit } from '@angular/core';\nimport { loadingstatus } from './app.utils';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n    private showLoader: boolean;\n\n    ngOnInit() {\n        loadingstatus.subscribe(loadingStatus => {\n            this.showLoader = loadingStatus;\n        });\n    }\n\n}\n","import { environment } from '../environments/environment';\n\n// Base API URL\nconst BASE_API_URL = environment.BASE_API_URL;\n\n// Cars\nconst CAR_PREFIX = '/cars';\nexport const GAT_ALL_CARS_FOR_COMPANY = `${BASE_API_URL}${CAR_PREFIX}/company/`;\nexport const GET_CAR_DETAILS_BY_ID = `${BASE_API_URL}${CAR_PREFIX}/details/`;\n\n// Companies\nconst COMPANY_PREFIX = '/companies';\nexport const GET_ALL_COMPANIES = `${BASE_API_URL}${COMPANY_PREFIX}/all`;\n\nexport const RequestParams = {\n    COMPANY_ID: 'companyId',\n    CAR_ID: 'carId',\n};\n","import { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppContentComponent } from './layout/app-content/app-content.component';\nimport { AppFooterComponent } from './layout/app-footer/app-footer.component';\nimport { AppNavComponent } from './layout/app-nav/app-nav.component';\nimport { CarOverviewComponent } from './pages/car-overview/car-overview.component';\nimport { HomepageComponent } from './pages/homepage/homepage.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { CarDetailComponent } from './pages/car-detail/car-detail.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CompanyOverviewComponent } from './pages/company-overview/company-overview.component';\n\nconst layout = [\n    AppComponent,\n    AppNavComponent,\n    AppContentComponent,\n    AppFooterComponent,\n];\n\nconst components = [\n    HomepageComponent,\n    NotFoundComponent,\n    CarOverviewComponent,\n    CarDetailComponent,\n    CompanyOverviewComponent\n];\n\nconst modules = [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    ReactiveFormsModule\n];\n\nconst routing = [\n    AppRoutingModule,\n];\n\n@NgModule({\n    bootstrap: [AppComponent],\n    declarations: [\n        layout,\n        components\n    ],\n    imports: [\n        modules,\n        routing\n    ],\n    providers: []\n})\nexport class AppModule {\n}\n","import { BehaviorSubject, Observable, of } from 'rxjs';\n\nexport function handleApiError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n        console.error(`${operation} failed: ${error.message}`);\n        console.error(error); // log to console instead\n        // Let the app keep running by returning an empty result.\n        return of(result as T);\n    };\n}\n\nexport function resizeWindow() {\n    window.dispatchEvent(new Event('resize'));\n}\n\nexport const loadingstatus: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\nexport function setLoadingStatus(status: boolean) {\n    loadingstatus.next(status);\n}\n\n","module.exports = \"<body class=\\\"hold-transition sidebar-mini\\\">\\n  <div class=\\\"wrapper\\\">\\n    <app-nav></app-nav>\\n    <div class=\\\"content-wrapper bg-gray-light\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n    <app-footer></app-footer>\\n  </div>\\n</body>\\n\"","module.exports = \"/*Extra Small*/\\n/*Small*/\\n/*Medium*/\\n/* Extra Large*/\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-content',\n    styleUrls: ['./app-content.component.scss'],\n    templateUrl: './app-content.component.html'\n})\nexport class AppContentComponent implements OnInit {\n\n    constructor() {\n    }\n\n    public ngOnInit() {\n    }\n}\n","module.exports = \"<footer class=\\\"main-footer\\\">\\n  <strong>Copyright &copy; 2018.</strong>\\n  All rights reserved.\\n  <div class=\\\"float-right d-none d-sm-block\\\">\\n    <b>Version</b> 1.0\\n  </div>\\n</footer>\\n\"","module.exports = \"/*Extra Small*/\\n/*Small*/\\n/*Medium*/\\n/* Extra Large*/\\n\"","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './app-footer.component.html',\n    styleUrls: ['./app-footer.component.scss']\n})\nexport class AppFooterComponent {\n\n    constructor() {\n    }\n\n}\n","module.exports = \"<!-- Top - Navbar -->\\n<nav class=\\\"main-header navbar navbar-expand bg-gray navbar-light border-bottom\\\">\\n  <!-- Left navbar -->\\n  <ul class=\\\"navbar-nav\\\">\\n    <li class=\\\"nav-item mouse-pointer\\\">\\n      <a class=\\\"nav-link\\\" data-widget=\\\"pushmenu\\\">\\n        <i class=\\\"fa fa-bars\\\"></i>\\n      </a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <button mat-button (click)=\\\"goBack()\\\" class=\\\"nav-link\\\">\\n        <i class=\\\"fa fa-angle-left\\\"></i>\\n        Back\\n      </button>\\n    </li>\\n  </ul>\\n</nav>\\n\\n<!-- Left - Navbar -->\\n<aside class=\\\"main-sidebar sidebar-dark-primary elevation-4\\\">\\n  <!-- Logo -->\\n  <a routerLink=\\\"/homepage\\\" class=\\\"brand-link\\\">\\n    <img src=\\\"assets/images/belfius.png\\\" alt=\\\"Angular Logo\\\" class=\\\"brand-image elevation-3\\\">\\n    <span class=\\\"brand-text font-weight-light\\\">Belfius</span>\\n  </a>\\n\\n  <!-- Sidebar -->\\n  <div class=\\\"sidebar\\\">\\n    <!-- Sidebar Menu -->\\n    <nav class=\\\"mt-2\\\">\\n      <ul class=\\\"nav nav-pills nav-sidebar flex-column\\\" data-widget=\\\"treeview\\\" role=\\\"menu\\\" data-accordion=\\\"false\\\">\\n        <li class=\\\"nav-header\\\">NAVIGATION</li>\\n        <li class=\\\"nav-item\\\">\\n          <a routerLink=\\\"/companies/overview\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link\\\">\\n            <i class=\\\"nav-icon fa fa-home\\\"></i>\\n            <p>Companies</p>\\n          </a>\\n        </li>\\n      </ul>\\n    </nav>\\n  </div>\\n</aside>\\n\"","module.exports = \"/*Extra Small*/\\n/*Small*/\\n/*Medium*/\\n/* Extra Large*/\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n    selector: 'app-nav',\n    templateUrl: './app-nav.component.html',\n    styleUrls: ['./app-nav.component.scss']\n})\nexport class AppNavComponent implements OnInit {\n\n    constructor(private location: Location) {\n    }\n\n    public ngOnInit() {\n\n    }\n\n    goBack(): void {\n        this.location.back();\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n} from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatMenuModule,\n        MatToolbarModule,\n        MatIconModule,\n        MatCardModule,\n        MatGridListModule,\n        MatSidenavModule,\n        MatSortModule,\n        MatTableModule,\n        MatInputModule,\n        MatSelectModule,\n        MatSliderModule,\n        MatRadioModule,\n        MatListModule,\n        MatProgressSpinnerModule,\n        MatChipsModule,\n        MatTooltipModule,\n        MatExpansionModule,\n        MatDialogModule,\n        MatAutocompleteModule,\n        MatTabsModule,\n        MatSlideToggleModule,\n        MatPaginatorModule\n    ],\n    exports: [\n        MatButtonModule,\n        MatMenuModule,\n        MatToolbarModule,\n        MatIconModule,\n        MatCardModule,\n        MatGridListModule,\n        MatSidenavModule,\n        MatSortModule,\n        MatTableModule,\n        MatInputModule,\n        MatSelectModule,\n        MatSliderModule,\n        MatRadioModule,\n        MatListModule,\n        MatProgressSpinnerModule,\n        MatChipsModule,\n        MatTooltipModule,\n        MatExpansionModule,\n        MatDialogModule,\n        MatAutocompleteModule,\n        MatTabsModule,\n        MatSlideToggleModule,\n        MatPaginatorModule\n    ]\n})\nexport class MaterialModule {\n}\n","module.exports = \"<!-- Header -->\\n<div class=\\\"content-header\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row mb-2\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <h1 class=\\\"text-dark\\\">Car Details</h1>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Content -->\\n<div class=\\\"content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <mat-card class=\\\"mb-4\\\">\\n      <mat-card-title>\\n        <div class=\\\"row justify-content-between\\\">\\n          <div>{{car?.model}}</div>\\n          <div>\\n            <small class=\\\"text-muted\\\">{{car?.brand}}</small>\\n          </div>\\n        </div>\\n      </mat-card-title>\\n      <hr>\\n      <img mat-card-image src=\\\"{{carImagePath}}\\\" alt=\\\"Car Picture\\\">\\n    </mat-card>\\n  </div>\\n</div>\\n\"","module.exports = \"/*Extra Small*/\\n/*Small*/\\n/*Medium*/\\n/* Large*/\\n/* Extra Large*/\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CarService } from '../../services/car.service';\nimport { Car } from '../../Interfaces/car';\nimport { ActivatedRoute } from '@angular/router';\nimport { resizeWindow } from '../../app.utils';\nimport { RequestParams } from '../../app.constants';\n\n@Component({\n    selector: 'app-car-detail',\n    templateUrl: './car-detail.component.html',\n    styleUrls: ['./car-detail.component.scss']\n})\nexport class CarDetailComponent implements OnInit {\n\n    private car: Car;\n    private carImagePath: string;\n\n    constructor(private carService: CarService, private route: ActivatedRoute) {\n        resizeWindow();\n    }\n\n    ngOnInit() {\n        this.getCarDetails();\n    }\n\n    getCarDetails(): void {\n        const carId = +this.route.snapshot.paramMap.get(RequestParams.CAR_ID);\n        this.carService.getCarDetailsById(carId)\n            .subscribe(car => {\n                this.car = car;\n                this.createCarImagePath(car.brand, car.model);\n            });\n    }\n\n    createCarImagePath(carBrandName, carModelName): void {\n        carModelName = carModelName.replace(/\\s/g, '_');\n        this.carImagePath = `assets/images/cars/${carBrandName}/${carModelName}.jpg`;\n    }\n\n}\n","module.exports = \"<!-- Header -->\\n<div class=\\\"content-header\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row mb-2\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <h1 class=\\\"text-dark\\\">Cars</h1>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Content -->\\n<div class=\\\"content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <mat-grid-list [cols]=\\\"colAmount\\\" rowHeight=\\\"100px\\\">\\n      <mat-grid-tile *ngFor=\\\"let car of cars\\\">\\n        <mat-card class=\\\"mouse-pointer light-gray-hover col-lg-11\\\" routerLink=\\\"/cars/details/{{car.id}}\\\">\\n          <mat-card-title>{{car.model}}</mat-card-title>\\n        </mat-card>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n  </div>\\n</div>\\n\"","module.exports = \"/*Extra Small*/\\n/*Small*/\\n/*Medium*/\\n/* Large*/\\n/* Extra Large*/\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CarService } from '../../services/car.service';\nimport { MediaChange, ObservableMedia } from '@angular/flex-layout';\nimport { resizeWindow } from '../../app.utils';\nimport { Car } from '../../Interfaces/car';\nimport { ActivatedRoute } from '@angular/router';\nimport { RequestParams } from '../../app.constants';\n\n@Component({\n    selector: 'app-car-overview',\n    templateUrl: './car-overview.component.html',\n    styleUrls: ['./car-overview.component.scss']\n})\nexport class CarOverviewComponent implements OnInit {\n\n    private cars: Car[];\n    private colAmount = 1;\n\n    constructor(private carService: CarService, private route: ActivatedRoute, private media: ObservableMedia) {\n        resizeWindow();\n        media.asObservable()\n            .subscribe((change: MediaChange) => {\n                if (change.mqAlias === 'lg') {\n                    this.colAmount = 2;\n                } else {\n                    this.colAmount = 1;\n                }\n            });\n    }\n\n    public ngOnInit() {\n        this.getCarsForComapy();\n    }\n\n    getCarsForComapy(): void {\n        const companyId = +this.route.snapshot.paramMap.get(RequestParams.COMPANY_ID);\n        this.carService.getAllCarsForcompany(companyId)\n            .subscribe(cars => this.cars = cars);\n    }\n\n}\n","module.exports = \"<!-- Header -->\\n<div class=\\\"content-header\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row mb-2\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <h1 class=\\\"text-dark\\\">Companies</h1>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Content -->\\n<div class=\\\"content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <mat-grid-list [cols]=\\\"colAmount\\\" rowHeight=\\\"100px\\\">\\n      <mat-grid-tile *ngFor=\\\"let company of companies\\\">\\n        <mat-card class=\\\"mouse-pointer light-gray-hover col-lg-11\\\" routerLink=\\\"/cars/overview/{{company.id}}\\\">\\n          <mat-card-title>{{company.name}}</mat-card-title>\\n        </mat-card>\\n      </mat-grid-tile>\\n    </mat-grid-list>\\n  </div>\\n</div>\\n\"","module.exports = \"/*Extra Small*/\\n/*Small*/\\n/*Medium*/\\n/* Large*/\\n/* Extra Large*/\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MediaChange, ObservableMedia } from '@angular/flex-layout';\nimport { resizeWindow } from '../../app.utils';\nimport { Company } from '../../Interfaces/company';\nimport { CompanyService } from '../../services/company.service';\n\n@Component({\n    selector: 'app-company-overview',\n    templateUrl: './company-overview.component.html',\n    styleUrls: ['./company-overview.component.scss']\n})\nexport class CompanyOverviewComponent implements OnInit {\n\n    private companies: Company[];\n    private colAmount = 1;\n\n    constructor(private companyService: CompanyService, media: ObservableMedia) {\n        resizeWindow();\n        media.asObservable()\n            .subscribe((change: MediaChange) => {\n                if (change.mqAlias === 'lg') {\n                    this.colAmount = 2;\n                } else {\n                    this.colAmount = 1;\n                }\n            });\n    }\n\n    public ngOnInit() {\n        this.getAllCompanies();\n    }\n\n    getAllCompanies(): void {\n        this.companyService.getAllCompanies()\n            .subscribe(companies => this.companies = companies);\n    }\n\n}\n","module.exports = \"<div class=\\\"content-header\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row mb-2\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <h1 class=\\\"m-0 text-dark\\\"></h1>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"content\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"row justify-content-center mb-5\\\">\\n      <h1>Welcome to the Belfius demo application!</h1>\\n    </div>\\n    <div class=\\\"row justify-content-center\\\">\\n      <img src=\\\"assets/images/belfius.png\\\" alt=\\\"Angular Logo\\\">\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"/*Extra Small*/\\n/*Small*/\\n/*Medium*/\\n/* Extra Large*/\\n\"","import { Component, Injectable, OnInit } from '@angular/core';\nimport { resizeWindow } from '../../app.utils';\n\n@Component({\n    selector: 'app-homepage',\n    templateUrl: './homepage.component.html',\n    styleUrls: ['./homepage.component.scss']\n})\n\n@Injectable()\nexport class HomepageComponent implements OnInit {\n\n    constructor() {\n        resizeWindow();\n    }\n\n    public ngOnInit() {\n    }\n\n}\n","module.exports = \"<!--Content-->\\n<section class=\\\"content\\\">\\n    <!--404-->\\n    <div class=\\\"error-page\\\">\\n        <h2 class=\\\"headline text-yellow\\\">404</h2>\\n        <div class=\\\"error-content\\\">\\n            <h3><i class=\\\"fa fa-warning text-yellow\\\"></i> Oops! Page not found.</h3>\\n            <p>\\n                Page not found, go back to <a [routerLink]=\\\"['/homepage']\\\">homepage</a>.\\n            </p>\\n        </div>\\n    </div>\\n</section>\\n\"","module.exports = \"/*Extra Small*/\\n/*Small*/\\n/*Medium*/\\n/* Extra Large*/\\n\"","import { Component, Injectable, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: './not-found.component.html',\n    styleUrls: ['./not-found.component.scss']\n})\n\n@Injectable()\nexport class NotFoundComponent implements OnInit {\n\n    constructor() {\n    }\n\n    public ngOnInit() {\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Car } from '../Interfaces/car';\nimport { handleApiError } from '../app.utils';\nimport { GAT_ALL_CARS_FOR_COMPANY, GET_CAR_DETAILS_BY_ID } from '../app.constants';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CarService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAllCarsForcompany(companyId: number): Observable<Car[]> {\n        console.log(`${GAT_ALL_CARS_FOR_COMPANY}${companyId}`);\n        return this.http.get<Car[]>(`${GAT_ALL_CARS_FOR_COMPANY}${companyId}`)\n            .pipe(\n                catchError(handleApiError('getAllCarsForcompany', []))\n            );\n    }\n\n    getCarDetailsById(carId: number): Observable<Car> {\n        console.log(`${GET_CAR_DETAILS_BY_ID}${carId}`);\n        return this.http.get<Car>(`${GET_CAR_DETAILS_BY_ID}${carId}`)\n            .pipe(\n                // catchError(handleApiError('getCarDetailsById'))\n            );\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { GET_ALL_COMPANIES } from '../app.constants';\nimport { handleApiError } from '../app.utils';\nimport { Company } from '../Interfaces/company';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CompanyService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAllCompanies(): Observable<Company[]> {\n        console.log(GET_ALL_COMPANIES);\n        return this.http.get<Company[]>(GET_ALL_COMPANIES)\n            .pipe(\n                catchError(handleApiError('getAllCompanies', []))\n            );\n    }\n\n}\n","export const environment = {\r\n    production: false,\r\n    BASE_API_URL: 'http://gateway-demo.40.114.214.208.nip.io'\r\n};\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.log(err));\n"],"sourceRoot":""}